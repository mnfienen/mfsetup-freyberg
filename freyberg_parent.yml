intermediate_data:
  tmpdir: 'original/'  # external arrays are read from here by flopy, and written to external_path

simulation:
  sim_name: 'freyberg_lgr'
  version: 'mf6'
  sim_ws: 'freyberg_lgr'

model:
  simulation: 'freyberg_lgr'
  modelname: 'freyberg_lgr_parent'
  options:
    print_input: True
    save_flows: True
    newton: True
    continue: True
    newton_under_relaxation: True
  external_path: '.'
  packages: ['dis',
             'ic',
             'oc',
             'npf',
             'sto',
           #  'rch', 
           #  'sfr',
           #  'wel',
             'ims'
  ]



# parameters for setting up the inset model grid
setup_grid:
  grid_file: '{}_grid.json' # grid info will be written to this file
  xoff: 564939.1369142552 # lower left x-coordinate
  yoff: 6280887.573219389 # lower left y-coordinate
  dxy: 250.
  rotation: 0.
  epsg: 2821
  lgr:
    pfl_lgr_inset:
      filename: 'freyberg_inset.yml'
      layer_refinement: 1  # number of lgr model layers per parent model layer

# DIS package settings
dis:
  remake_top: True
  options:
    length_units: 'meters'
  dimensions:
    nrow: 40
    ncol: 20
    nlay: 3
  source_data:
    top:
      filename: 'orig_mf6/postproc/rasters/top.tif'
      elevation_units: 'meters'
    botm:
      filenames:
        0: 'orig_mf6/postproc/rasters/botm_lay0.tif'  # 
        1: 'orig_mf6/postproc/rasters/botm_lay1.tif'  # 
        2: 'orig_mf6/postproc/rasters/botm_lay2.tif'  # 
    idomain:
      filenames:
        0: 'orig_mf6/postproc/rasters/idomain_lay0.tif'  # 
        1: 'orig_mf6/postproc/rasters/idomain_lay1.tif'  # 
        2: 'orig_mf6/postproc/rasters/idomain_lay2.tif'  #         
  drop_thin_cells: True

tdis:
  options:
    time_units: 'days'
    start_date_time: '2020-01-01'
  perioddata:
    # time discretization info can be specified directly under the perioddata key
    # or in groups of stress periods that are discretized in a similar way
    group 1: # initial steady-state period (steady specified under sto package)
      #perlen: 1 # Specify perlen as an int or list of lengths in model units, or perlen=None and 3 of start_date, end_date, nper and/or freq."
      nper: 1
      nstp: 1
      tsmult: 1
      steady: True  # "steady" can be entered here; otherwise the global entry specified in the sto package is used as the default
      # oc_saverecord: can also be specified by group here; otherwise the global entry specified in the oc package is used as the default
    group 2: # monthly stress periods
      start_date_time: '2020-01-01'  # can be specified by group, otherwise start_date_time for the model (under tdis: options) will be used.
      end_date_time: '2022-12-31'  # end times are specified following pandas slice convention, which includes the specified end date
      freq: '1MS' # same as argument to pandas.date_range; (see "Offset Aliases" at https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#timeseries-offset-aliases)
      nstp: 1
      nper: 24
      tsmult: 1.0
      steady: False

ic:
  source_data:
    strt:
      filenames:
        0: 'orig_mf6/postproc/rasters/strt_lay0.tif'  # 
        1: 'orig_mf6/postproc/rasters/strt_lay1.tif'  # 
        2: 'orig_mf6/postproc/rasters/strt_lay2.tif'  # 



npf:
  options:
    save_flows: True
  griddata:
    icelltype: 1 # variable sat. thickness in all layers
  source_data:
    filenames:
      k:
          0: 'orig_mf6/postproc/rasters/k_lay0.tif'  # 
          1: 'orig_mf6/postproc/rasters/k_lay1.tif'  # 
          2: 'orig_mf6/postproc/rasters/k_lay2.tif'  # 
    filenames:
      k33:
          0: 'orig_mf6/postproc/rasters/k33_lay0.tif'  # 
          1: 'orig_mf6/postproc/rasters/k33_lay1.tif'  # 
          2: 'orig_mf6/postproc/rasters/k33_lay2.tif'  # 

    # by not specifying source data; input will be regridded from parent model


sto:
  options:
    save_flows: True
  griddata:
    iconvert: 1  # convertible layers
  source_data:
    filenames:
      ss:
          0: 'orig_mf6/postproc/rasters/ss_lay0.tif'  # 
          1: 'orig_mf6/postproc/rasters/ss_lay1.tif'  # 
          2: 'orig_mf6/postproc/rasters/ss_lay2.tif'  # 
    filenames:
      ss:
          0: 'orig_mf6/postproc/rasters/sy_lay0.tif'  # 
          1: 'orig_mf6/postproc/rasters/sy_lay1.tif'  # 
          2: 'orig_mf6/postproc/rasters/sy_lay2.tif'  #  
rch:
  options:
    print_input: True
    print_flows: False
    save_flows: True
    readasarrays: True
  source_data:
    recharge:
      filenames: 
        0: 'orig_mf6/postproc/rasters/recharge_per0.tif'  # 
        1: 'orig_mf6/postproc/rasters/recharge_per1.tif'  # 
        2: 'orig_mf6/postproc/rasters/recharge_per2.tif'  # 
        3: 'orig_mf6/postproc/rasters/recharge_per3.tif'  # 
        4: 'orig_mf6/postproc/rasters/recharge_per4.tif'  # 
        5: 'orig_mf6/postproc/rasters/recharge_per5.tif'  # 
        6: 'orig_mf6/postproc/rasters/recharge_per6.tif'  # 
        7: 'orig_mf6/postproc/rasters/recharge_per7.tif'  # 
        8: 'orig_mf6/postproc/rasters/recharge_per8.tif'  # 
        9: 'orig_mf6/postproc/rasters/recharge_per9.tif'  # 
        10: 'orig_mf6/postproc/rasters/recharge_per10.tif'  # 
        11: 'orig_mf6/postproc/rasters/recharge_per11.tif'  # 
        12: 'orig_mf6/postproc/rasters/recharge_per12.tif'  # 
        13: 'orig_mf6/postproc/rasters/recharge_per13.tif'  # 
        14: 'orig_mf6/postproc/rasters/recharge_per14.tif'  # 
        15: 'orig_mf6/postproc/rasters/recharge_per15.tif'  # 
        16: 'orig_mf6/postproc/rasters/recharge_per16.tif'  # 
        17: 'orig_mf6/postproc/rasters/recharge_per17.tif'  # 
        18: 'orig_mf6/postproc/rasters/recharge_per18.tif'  # 
        19: 'orig_mf6/postproc/rasters/recharge_per19.tif'  # 
        20: 'orig_mf6/postproc/rasters/recharge_per20.tif'  # 
        21: 'orig_mf6/postproc/rasters/recharge_per21.tif'  # 
        22: 'orig_mf6/postproc/rasters/recharge_per22.tif'  # 
        23: 'orig_mf6/postproc/rasters/recharge_per23.tif'  # 
        24: 'orig_mf6/postproc/rasters/recharge_per24.tif'  #         
      length_units: 'meters'
      time_units: 'days'

#wel:
#  source_data:
#    wdnr_dataset:
#      water_use: '../webservice_metadata/python_output/master_wu.csv' # monthly water use rates from WDNR
#      water_use_points: '../webservice_metadata/python_output/csls_sources_wu_pts.shp' # point locations of wells in water_use
#      period_stats: {0: ['mean', '2013-01-01', '2015-12-31'],
#                     1: 'resample'}

#sfr:
#  source_data:
#    flowlines:
#      nhdplus_paths: ['/Users/mnfienen/Documents/GIT/CSLS/gis/NHD/NHDPlusGL/NHDPlus04/',
#                      '/Users/mnfienen/Documents/GIT/CSLS/gis/NHD/NHDPlusMS/NHDPlus07/']
      #nhdplus_paths: ['/Users/aleaf/Documents/NHDPlus/NHDPlusGL/NHDPlus04/',
      #                '/Users/aleaf/Documents/NHDPlus/NHDPlusMS/NHDPlus07/']
#    dem:
#      filename: 'source_data/dem_lidar_10.tif'
#      elevation_units: 'meters'
#    observations:  # see sfrmaker.observations.add_observations for arguments
#      filename: 'tables/flux_obs.csv'
#      obstype: 'downstream-flow'  # modflow-6 observation type
#      x_location_column: 'x_utm'
#      y_location_column: 'y_utm'
#      obsname_column: 'obsnme'
#  set_streambed_top_elevations_from_dem: True


ims:
  options:
    print_option: 'all'
    complexity: 'complex'
    'csv_output fileout': 'solver_out.csv'
  nonlinear:
    outer_dvlose: 1.e-2
    outer_maximum: 200
  linear:
    inner_dvlose: 1.e-4
    inner_rclose: 0.0001
    relaxation_factor: 0.98  # either ILU(0) or ILUT preconditioning
